{"version":3,"file":"0.plugin.js","sources":["/plugin:toDoList/plugins/to_do_list/public/application.tsx","/plugin:toDoList/plugins/to_do_list/public/components/app.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ToDoListApp } from './components/app';\nexport const renderApp = ({\n  notifications,\n  http\n}, {\n  navigation\n}, {\n  appBasePath,\n  element\n}) => {\n  ReactDOM.render( /*#__PURE__*/React.createElement(ToDoListApp, {\n    basename: appBasePath,\n    notifications: notifications,\n    http: http,\n    navigation: navigation\n  }), element);\n  return () => ReactDOM.unmountComponentAtNode(element);\n};","import React, { useState, useEffect } from 'react';\nimport { i18n } from '@kbn/i18n';\nimport { I18nProvider } from '@kbn/i18n/react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { EuiButton, EuiHorizontalRule, EuiPage, EuiPageBody, EuiPageContent, EuiPageContentBody, EuiPageContentHeader, EuiPageHeader, EuiTitle, EuiText, EuiFieldText, EuiFlexGroup, EuiFlexItem, EuiSpacer, EuiCard, EuiButtonIcon } from '@elastic/eui';\nimport { PLUGIN_ID } from '../../common';\nexport const ToDoListApp = ({\n  basename,\n  notifications,\n  http,\n  navigation\n}) => {\n  // Use React hooks to manage state.\n  const [timestamp, setTimestamp] = useState();\n\n  const onClickHandler = () => {\n    // Use the core http service to make a response to the server API.\n    http.get('/api/to_do_list/example').then(res => {\n      setTimestamp(res.time); // Use the core notifications service to display a success message.\n\n      notifications.toasts.addSuccess(i18n.translate('toDoList.dataUpdated', {\n        defaultMessage: 'Data updated'\n      }));\n    });\n  }; //EXPRESS\n  // const URL = 'http://localhost:8000/api';\n  //HAPI\n\n\n  const URL = 'http://localhost:5601/ptu/api';\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]); //GET\n\n  useEffect(() => {\n    async function getList() {\n      const response = await fetch(`${URL}/to_do_lists`);\n      const jsonTodo = await response.json();\n      console.log(jsonTodo);\n      setTodos(jsonTodo);\n    }\n\n    getList();\n  }, []); //Type garne bela onCHange\n\n  const inputTextHandler = e => {\n    setInputText(e.target.value);\n  }; //Create New List\n\n\n  const submitTodoHandler = async e => {\n    e.preventDefault();\n    let smth = {\n      text: inputText,\n      desc: 'Smile :)',\n      id: Math.random() * 1000\n    };\n    const response = await fetch(`${URL}/to_do_lists`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"kbn-xsrf\": 'true'\n      },\n      body: JSON.stringify(smth)\n    });\n    console.log(response); // const json = await response.json();\n\n    setTodos([...todos, smth]);\n    setInputText(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename\n  }, /*#__PURE__*/React.createElement(I18nProvider, null, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(navigation.ui.TopNavMenu, {\n    appName: PLUGIN_ID,\n    showSearchBar: true,\n    useDefaultBehaviors: true\n  }), /*#__PURE__*/React.createElement(EuiPage, {\n    restrictWidth: \"1200px\"\n  }, /*#__PURE__*/React.createElement(EuiPageBody, null, /*#__PURE__*/React.createElement(EuiPageHeader, null, /*#__PURE__*/React.createElement(EuiFlexGroup, {\n    justifyContent: \"center\"\n  }, /*#__PURE__*/React.createElement(EuiTitle, {\n    size: \"l\"\n  }, /*#__PURE__*/React.createElement(\"h1\", null, \"TO-DO LIST\")))), /*#__PURE__*/React.createElement(EuiSpacer, {\n    size: \"m\"\n  }), /*#__PURE__*/React.createElement(EuiPageContent, null, /*#__PURE__*/React.createElement(EuiPageContentHeader, null, /*#__PURE__*/React.createElement(EuiFlexGroup, {\n    justifyContent: \"center\"\n  }, /*#__PURE__*/React.createElement(EuiTitle, null, /*#__PURE__*/React.createElement(\"h2\", null, \"\\u2193 Write Here \\u2193\")))), /*#__PURE__*/React.createElement(EuiHorizontalRule, null), /*#__PURE__*/React.createElement(EuiSpacer, {\n    size: \"xs\"\n  }), /*#__PURE__*/React.createElement(EuiPageContentBody, null, /*#__PURE__*/React.createElement(EuiText, null, /*#__PURE__*/React.createElement(EuiFlexGroup, null, /*#__PURE__*/React.createElement(EuiFlexItem, {\n    grow: 6\n  }, /*#__PURE__*/React.createElement(EuiFieldText, {\n    value: inputText,\n    onChange: inputTextHandler,\n    fullWidth: true,\n    placeholder: \"Add your things to do..\"\n  })), /*#__PURE__*/React.createElement(EuiFlexItem, {\n    grow: 1\n  }, /*#__PURE__*/React.createElement(EuiButton, {\n    type: \"primary\",\n    size: \"m\",\n    onClick: submitTodoHandler\n  }, \"Add to List\")))))))), /*#__PURE__*/React.createElement(EuiPage, {\n    restrictWidth: \"1200px\"\n  }, /*#__PURE__*/React.createElement(EuiPageBody, null, /*#__PURE__*/React.createElement(EuiPageHeader, null), /*#__PURE__*/React.createElement(EuiPageContent, null, /*#__PURE__*/React.createElement(EuiPageContentHeader, null, /*#__PURE__*/React.createElement(EuiTitle, null, /*#__PURE__*/React.createElement(\"h3\", null, \"Your List:\"))), /*#__PURE__*/React.createElement(EuiHorizontalRule, null), /*#__PURE__*/React.createElement(EuiPageContentBody, null, /*#__PURE__*/React.createElement(EuiFlexGroup, null, /*#__PURE__*/React.createElement(EuiFlexItem, null, todos.map(todo => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EuiCard, {\n    key: todo.id,\n    layout: \"horizontal\",\n    title: todo.text,\n    description: todo.desc\n  }, /*#__PURE__*/React.createElement(EuiButtonIcon, {\n    key: todo.id,\n    onClick: async () => {\n      const res = await fetch(`${URL}/to_do_list/${todo.id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": 'application/json',\n          \"kbn-xsrf\": 'true'\n        }\n      });\n      setTodos(todos.filter(el => el.id !== todo.id));\n    },\n    display: \"base\",\n    iconType: \"trash\",\n    \"aria-label\": \"Delete\",\n    color: \"danger\"\n  })), /*#__PURE__*/React.createElement(EuiSpacer, {\n    size: \"xs\"\n  }))))))))))));\n};"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnsourceRoot":""}